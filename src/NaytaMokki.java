package mökinvaraus;

import OTI_Projekti.Palveluntarjoaja;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
/**
 * Luokka mökkien tietojen lukemiselle
 * @author Matias
 */
public class NaytaMokki extends javax.swing.JFrame {

    private int mokki_id;
    private int alue_id;
    private String pnro;
    private String nimi;
    private String osoite;
    private double hinta;
    private String kuvaus;
    private int hlo;
    private String varustelu;
            
    
    /**
     * Creates new form NaytaMokki
     */
    public NaytaMokki() {
        initComponents();
    }

    /**
     * Alustaja mökin tiedoilla
     * @param mokki_id
     * @param alue_id
     * @param pnro
     * @param nimi
     * @param osoite
     * @param hinta
     * @param kuvaus
     * @param hlo
     * @param varustelu 
     */
    public NaytaMokki(int mokki_id, int alue_id, String pnro, String nimi, String osoite, double hinta, String kuvaus, int hlo, String varustelu){
        this.mokki_id = mokki_id;
        this.alue_id = alue_id; 
        this.pnro = pnro;
        this.nimi = nimi;
        this.osoite = osoite;
        this.hinta = hinta;
        this.kuvaus = kuvaus;
        this.hlo = hlo;
        this.varustelu = varustelu;    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jList1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jList1);

        jButton2.setText("Sulje");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Päivitä");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Mökit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(jLabel3)))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(282, 282, 282))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * ToString-metodi, joka palauttaa mökin tiedot listaa varten
     * @return String
     */
    @Override
    public String toString(){
        return "Mökki ID: "+this.mokki_id+", Alue ID: "+ this.alue_id+", Postinumero: "+this.pnro+ ", Mökin nimi: "+ this.nimi+", Katuosoite: "+this.osoite+", Hinta: "+this.hinta+", Kuvaus: "+this.kuvaus+", Henkilömäärä: "+this.hlo+", Varustelu: "+this.varustelu;
    }
    /**
     * Metodi listan täyttämiseen
     * @param list
     * @param query
     * @throws SQLException 
     */
    public void populateJList(JList list, String query) throws SQLException
    {
        DefaultListModel model = new DefaultListModel();
        
        try
        {
            Connection con=Palveluntarjoaja.getCon();
            Statement st = con.createStatement();
            ResultSet resultSet = st.executeQuery(query);

            while (resultSet.next())
            {
            mokki_id = Integer.parseInt(resultSet.getString("mokki_id"));
            alue_id = Integer.parseInt(resultSet.getString("alue_id"));
            pnro = resultSet.getString("postinro");
            nimi = resultSet.getString("mokkinimi");
            osoite = resultSet.getString("katuosoite");
            hinta = Double.parseDouble(resultSet.getString("hinta"));
            kuvaus = resultSet.getString("kuvaus");
            hlo = Integer.parseInt(resultSet.getString("henkilomaara"));
            varustelu = resultSet.getString("varustelu");
            
            NaytaMokki mokki1 = new NaytaMokki(mokki_id, alue_id, pnro, nimi, osoite, hinta, kuvaus, hlo, varustelu);
            model.addElement(mokki1.toString());
            }
            list.setModel(model);
            resultSet.close();
            st.close();
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, "Tietojen hakemisessa tapahtui virhe");
            setVisible(false);
            new NaytaMokki().setVisible(true);
        }

        

    }
        
    private void jList1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jList1AncestorAdded

    }//GEN-LAST:event_jList1AncestorAdded

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Päivittää listan
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            populateJList(jList1, "Select * from mokki order by mokki_id");
        } catch (SQLException ex) {
            Logger.getLogger(NaytaAlue.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NaytaMokki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NaytaMokki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NaytaMokki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NaytaMokki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NaytaMokki().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
